.homepage-main {
    border: 1px solid black;
    column-gap: 10px;
    row-gap: 10px;
    display: grid;
    grid-template-columns: repeat(2, 1fr);
    grid-template-rows: 150px 150px 150px 150px 150px;
    /*  grid-template-areas must follow the exact number of columns and rows defined above (4 columns and 4 rows)  */
    grid-template-areas:
      "hero     hero"           /* one for each column */
      "feature  feature"
      "product  product"
      "footer    footer";           /* the dot is used to skip a column */
  }
  
  .homepage-hero {
    background-color: coral;
    grid-area: hero;
  }
  
  .homepage-feature {
    background-color: darkBlue;
    grid-area: feature;
  }
  
  .homepage-products {
    background-color: darkSeaGreen;
    grid-area: product;
    display: grid;
    gap: 10px;
    grid-template-columns: repeat(2, 0.5fr);
    grid-template-rows: 50px 50px;
    grid-template-areas:
      "product-item1     product-item2"           /* one for each column */
      "product-item3     product-item4"
; 
  }

  .grid-item1 {
    background-color: rgba(255, 255, 255, 0.8);
    border: 1px solid rgba(0, 0, 0, 0.8);
    padding: 20px;
    font-size: 30px;
    text-align: center;
    grid-area: product-item1;
  }

  .grid-item2 {
    background-color: rgba(255, 255, 255, 0.8);
    border: 1px solid rgba(0, 0, 0, 0.8);
    padding: 20px;
    font-size: 30px;
    text-align: center;
    grid-area: product-item2;
  }

  .grid-item3 {
    background-color: rgba(255, 255, 255, 0.8);
    border: 1px solid rgba(0, 0, 0, 0.8);
    padding: 20px;
    font-size: 30px;
    text-align: center;
    grid-area: product-item3;
  }

  .grid-item4 {
    background-color: rgba(255, 255, 255, 0.8);
    border: 1px solid rgba(0, 0, 0, 0.8);
    padding: 20px;
    font-size: 30px;
    text-align: center;
    grid-area: product-item4;
  }
  
  .homepage-footer {
    background-color: darkTurquoise;
    grid-area: footer;
  }
  
  /* 
    Now let's change it for larger screens 
    (using quite small breakpoints here to allow for Codepen's small viewport)
  */
  
  /* TABLET: */
  @media screen and (min-width: 550px) {
  
    /*  
      We only define rules which are DIFFERENT from the mobile version defined above. 
    */
  
    .homepage-main {
      /*  we need more columns for a more complex layout  */
      grid-template-columns: repeat(6, 1fr); 
      /*  we need less rows now  */
      grid-template-rows: 140px 100px 80px; 
      /*  our template now has 6 columns and 3 rows  */
      grid-template-areas:
        "hero    hero    hero    hero  hero     hero"
        "feature feature feature .     footer    footer"
        "product product product .     footer   footer";
    }
    
  /* 
    We don't need to re-define the grid-area for each block because these haven't changed. The hero is still the hero, the feature is still the feature etc. 
  */
    
  } /* end of tablet media query  */
  
  
  /* DESKTOP */
  @media screen and (min-width: 750px) {
  
    /*  
      We only define rules which are DIFFERENT from the mobile OR tablet version defined above. 
    */
  
    .homepage-main {
      /*  This time we keep the same number of columns and rows as for tablet, so we don't need to re-define those  */
    /*   All we're doing here is skipping the 1st and last columns so the content isn't too wide.   */
      grid-template-areas:
        ".  hero    hero    hero  hero     ."
        ".  feature feature .     footer    ."
        ".  product product .     footer    .";
    }
    
  } /* end of desktop media query  */
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  /* Ignore this */
  .tip {
    display: block;
    padding-top: 30px;
    font-family: Arial;
    color: grey;
  }
  
  .tablet, .desktop {
    display: none;
  }
  
  @media screen and (min-width: 540px) {
    .mobile, desktop {
      display: none;
    }
    .tablet {
      display: block;
    }
  }
  @media screen and (min-width: 900px) {
    .mobile, .tablet {
      display: none;
    }
      .desktop {
      display: block;
    }
  }
